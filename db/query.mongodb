use("db_bodegas_campus");
db.createCollection("counters")
db.counters.insertMany([
    {ID: "productosID", sequenceValue: 3},
    {ID: "inventariosID", sequenceValue: 5},
    {ID: "bodegasID", sequenceValue: 3},
    {ID: "historialesID", sequenceValue: 0}
])

use("db_bodegas_campus");
db.createCollection("users",{
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "ID","nombre", "email", "estado", "created_by", "password"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
              },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z ]+$",
                description: "Debe informar el campo nombre y este debe ser un string",
            },
            email: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@-]+$",
                description: "Debe informar el campo email y este debe ser un string",
            },
            email_verified_at: {
                bsonType: ["date", "null"],
                description: "El campo email_verified_at debe ser tipo date",
            },
            estado: {
                bsonType: "int",
                description: "El campo estado debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            foto: {
                bsonType: "string",
            },
            password: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@ -]+$",
                description: "Debe informar el campo password y este debe ser un string",
            },
            created_at: {
                bsonType: ["date", "null"],
                description: "El campo created_at debe ser un date ",
            },
            update_at: {
                bsonType: ["date", "null"],
                description: "El campo update_at debe ser un  date",
            },
            deleted_at: {
                bsonType: ["date", "null"],
                description: "El campo deleted_at debe ser un date ",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("productos",{
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre", "descripcion", "estado","created_by"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z ]+$",
                description: "el campo name y este debe ser un string",
            },
            descripcion: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@ -]+$",
                description: "el campo descripcion y este debe ser un string",
            },
            estado: {
                bsonType: "int",
                description: "El campo estado debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: ["date", "null"],
                description: "El campo created_at debe ser un date ",
            },
            update_at: {
                bsonType: ["date", "null"],
                description: "El campo update_at debe ser un  date",
            },
            deleted_at: {
                bsonType: ["date", "null"],
                description: "El campo deleted_at debe ser un date ",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("inventarios",{
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "id_bodega", "id_producto", "cantidad","created_by"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            id_bodega: {
                bsonType: "int",
                description: "El campo id_bodega debe ser un número"
            },
            id_producto: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            cantidad: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: ["date", "null"],
                description: "El campo created_at debe ser un date ",
            },
            update_at: {
                bsonType: ["date", "null"],
                description: "El campo update_at debe ser un  date",
            },
            deleted_at: {
                bsonType: ["date", "null"],
                description: "El campo deleted_at debe ser un date ",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("historiales",{
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "cantidad","id_bodega_origen", "id_bodega_destino", "id_inventario" ,"estado","created_by"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            cantidad: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            id_bodega_origen: {
                bsonType: "int",
                description: "El campo id_bodega debe ser un número"
            },
            id_bodega_destino: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            id_inventario: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            estado: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: ["date", "null"],
                description: "El campo created_at debe ser un date ",
            },
            update_at: {
                bsonType: ["date", "null"],
                description: "El campo update_at debe ser un  date",
            },
            deleted_at: {
                bsonType: ["date", "null"],
                description: "El campo deleted_at debe ser un date ",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("bodegas",{
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre","id_responsable","estado","created_by"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z ]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            id_responsable: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            estado: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: ["date", "null"],
                description: "El campo created_at debe ser un date ",
            },
            update_at: {
                bsonType: ["date", "null"],
                description: "El campo update_at debe ser un  date",
            },
            deleted_at: {
                bsonType: ["date", "null"],
                description: "El campo deleted_at debe ser un date ",
            }
        },
    },
    },
});

//INSERCION DATOS POR DEFECTO

//USERS
use("db_bodegas_campus");
db.users.insertMany([
  {
    ID: 1005644957,
    nombre: "carlos",
    email: "usuario1@example.com",
    estado: 1,
    created_by: 100,
    password: "password123",
  },
  {
    ID: 1259486256,
    nombre: "andres",
    email: "usuario2@example.com",
    estado: 1,
    created_by: 101,
    password: "password456",
  },
  {
    ID: 1007514215,
    nombre: "jose",
    email: "usuario3@example.com",
    estado: 1,
    created_by: 102,
    password: "password789",
  }
]);

//PRODUCTOS
use("db_bodegas_campus");
db.productos.insertMany([
  {
    ID: 1,
    nombre: "Pantalones",
    descripcion: "Descripción del Pantalones",
    estado: 1,
    created_by: 1,
  },
  {
    ID: 2,
    nombre: "Camisas",
    descripcion: "Descripción del Camisas",
    estado: 1,
    created_by: 1,
  },
  {
    ID: 3,
    nombre: "Zapatos",
    descripcion: "Descripción del Zapatos54",
    estado: 1,
    created_by: 1,
  }
]); 

//INVENTARIOS
use("db_bodegas_campus");
db.inventarios.insertMany([
  {
    ID: 1,
    id_bodega: 1,
    id_producto: 1,
    cantidad: 50,
    created_by: 1,
  },
  {
    ID: 2,
    id_bodega: 1,
    id_producto: 2,
    cantidad: 30,
    created_by: 1,
  },
  {
    ID: 3,
    id_bodega: 2,
    id_producto: 1,
    cantidad: 20,
    created_by: 1,
  },
  {
    ID: 4,
    id_bodega: 3,
    id_producto: 2,
    cantidad: 10,
    created_by: 1,
  },
  {
    ID: 5,
    id_bodega: 3,
    id_producto: 1,
    cantidad: 25,
    created_by: 1,
  },
]);

//BODEGAS
use("db_bodegas_campus");
db.bodegas.insertMany([
  {
    ID: 1,
    nombre: "Bodega A",
    id_responsable: 1005644957,
    estado: 1,
    created_by: 1,
  },
  {
    ID: 2,
    nombre: "Bodega B",
    id_responsable: 1259486256,
    estado: 1,
    created_by: 1,
  },
  {
    ID: 3,
    nombre: "Bodega C",
    id_responsable: 1007514215,
    estado: 1,
    created_by: 1,
  }
]);