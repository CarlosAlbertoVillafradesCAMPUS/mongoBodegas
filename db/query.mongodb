use("db_bodegas_campus");
db.createCollection("counters")
db.counters.insertMany([
    {ID: "usersID", sequenceValue: 0},
    {ID: "productosID", sequenceValue: 0},
    {ID: "inventariosID", sequenceValue: 0},
    {ID: "bodegasID", sequenceValue: 0},
    {ID: "historialesID", sequenceValue: 0}
])

use("db_bodegas_campus");
db.createCollection("users",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre", "email", "estado", "created_by", "password"],
        properties: {
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
              },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z\\s]+$",
                description: "Debe informar el campo nombre y este debe ser un string",
            },
            email: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo email y este debe ser un string",
            },
            email_verified_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo email_verified_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            estado: {
                bsonType: "int",
                description: "El campo estado debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            foto: {
                bsonType: "string",
            },
            password: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo password y este debe ser un string",
            },
            created_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo created_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            update_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo update_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            deleted_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo deleted_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("productos",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre", "descripcion", "estado","created_by"],
        properties: {
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z\\s]+$",
                description: "el campo name y este debe ser un string",
            },
            descripcion: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "el campo descripcion y este debe ser un string",
            },
            estado: {
                bsonType: "int",
                description: "El campo estado debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo created_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            update_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo update_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            deleted_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo deleted_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("inventarios",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "id_bodega", "id_producto", "cantidad","created_by"],
        properties: {
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            id_bodega: {
                bsonType: "int",
                description: "El campo id_bodega debe ser un número"
            },
            id_producto: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            cantidad: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo created_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            update_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo update_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            deleted_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo deleted_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            }
        },
    },
    },
});

use("db_bodegas_campus");
db.createCollection("historiales",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "cantidad","id_bodega_origen", "id_bodega_destino", "id_inventario" ,"estado","created_by"],
        properties: {
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            cantidad: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            id_bodega_origen: {
                bsonType: "int",
                description: "El campo id_bodega debe ser un número"
            },
            id_bodega_destino: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            id_inventario: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            estado: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo created_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            update_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo update_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            deleted_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo deleted_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            }
        },
    },
    },
});
use("db_bodegas_campus");
db.historiales.insertOne({
        cantidad:1,
        id_bodega_origen:1,
        id_bodega_destino:1,
        id_inventario:1,
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:"2022-01-03",
        update_at:"2023-05-03",
        deleted_at:"2024-10-03"
});


use("db_bodegas_campus");
db.createCollection("bodegas",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre","id_responsable","estado","created_by"],
        properties: {
            ID: {
                bsonType: "int",
                description: "ID debe ser un int",
            },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z\\s]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            id_responsable: {
                bsonType: "int",
                description: "El campo id_producto debe ser un número"
            },
            estado: {
                bsonType: "int",
                description: "El campo cantidad debe ser un número"
            },
            created_by: {
                bsonType: "int",
                description: "El campo created_by debe ser un número"
            },
            update_by: {
                bsonType: "int",
                description: "El campo update_by debe ser un número"
            },
            created_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo created_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            update_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo update_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            },
            deleted_at: {
                bsonType: "string",
                pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                description: "El campo deleted_at debe ser un string  con la siguiente estructura AAAA-MM-DD",
            }
        },
    },
    },
});

//AGREGAR DATOS
use("db_bodegas_campus");
db.users.insertOne({
        nombre:"Carlos",
        email:"cavilla@gmail.com",
        email_verified_at:"2024-10-03",
        estado: 1,
        created_by:1,
        update_by:1,
        foto: "",
        password:"villa",
        created_at:"2022-12-03",
        update_at:"2023-06-03",
        deleted_at:"2024-11-03"
});

use("db_bodegas_campus");
db.productos.insertOne({
        nombre:"zapatillas",
        descripcion:"las mejores zapatillas",
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:"2023-01-03",
        update_at:"2023-05-03",
        deleted_at:"2023-10-03"
});

use("db_bodegas_campus");
db.inventarios.insertOne({
        id_bodega:1,
        id_producto:1,
        cantidad: 1,
        created_by:1,
        update_by:1,
        created_at:"2022-10-03",
        update_at:"2023-12-03",
        deleted_at:"2024-05-03"
});

use("db_bodegas_campus");
db.historiales.insertOne({
        cantidad:1,
        id_bodega_origen:1,
        id_bodega_destino:1,
        id_inventario:1,
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:"2022-01-03",
        update_at:"2023-05-03",
        deleted_at:"2024-10-03"
});

use("db_bodegas_campus");
db.bodegas.insertOne({
        nombre:"El gran villa",
        id_responsable:1,
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:"2023-16-03",
        update_at:"2023-18-04",
        deleted_at:"2023-20-05"
});